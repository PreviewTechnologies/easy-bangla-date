{"name":"Easy Bangla Date","tagline":"Extended DateTime Class For Bangla Date and Time","body":"Easy Bangla Date\r\n=================\r\n[![Build Status](https://travis-ci.org/ronisaha/easy-bangla-date.png?branch=master)](https://travis-ci.org/ronisaha/easy-bangla-date)\r\n[![HHVM Status](http://hhvm.h4cc.de/badge/ronisaha/easy-bangla-date.svg)](http://hhvm.h4cc.de/package/ronisaha/easy-bangla-date)\r\n[![Coverage Status](https://coveralls.io/repos/ronisaha/easy-bangla-date/badge.png)](https://coveralls.io/r/ronisaha/easy-bangla-date)\r\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/ronisaha/easy-bangla-date/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/ronisaha/easy-bangla-date/?branch=master)\r\n[![Latest Stable Version](https://poser.pugx.org/ronisaha/easy-bangla-date/v/stable.png)](https://packagist.org/packages/ronisaha/easy-bangla-date)\r\n[![Total Downloads](https://poser.pugx.org/ronisaha/easy-bangla-date/downloads.png)](https://packagist.org/packages/ronisaha/easy-bangla-date)\r\n\r\nUtility Library For Bangla Date and Time. The conversion logic got from https://github.com/mhmithu/bangla-date-and-time\r\n\r\nKey Features\r\n------------\r\n* Easy to use\r\n* Works same as php native DateTime Class\r\n* Support almost all format option like DateTime class\r\n* Can customize the start of day hour by setting morning option(for BnDateTime)\r\n\r\n\r\nSynopsis\r\n-----------\r\n\r\n```php\r\n<?php\r\nuse EasyBanglaDate\\Types\\BnDateTime;\r\nuse EasyBanglaDate\\Types\\DateTime as EnDateTime;\r\n\r\nrequire 'autoload.php'\r\n\r\n$gregorian = new EnDateTime('now', new DateTimeZone('Asia/Dhaka'));\r\n$bongabda = new BnDateTime('now', new DateTimeZone('Asia/Dhaka'));\r\n\r\necho $gregorian->format('l jS F Y b h:i:s');\r\necho $bongabda->format('l jS F Y b h:i:s');\r\n\r\n```\r\n\r\n![Alt text](/screenshot.jpeg?raw=true \"Output\")\r\n\r\n\r\n## Installation/Usage\r\n\r\nIf you're using Composer to manage dependencies, you can include the following\r\nin your composer.json file:\r\n\r\n    \"require\": {\r\n        \"ronisaha/easy-bangla-date\": \"dev-master\"\r\n    }\r\n\r\nThen, after running `composer update` or `php composer.phar update`, you can\r\nload the class using Composer's autoloading:\r\n\r\n```php\r\nrequire 'vendor/autoload.php';\r\n```\r\n\r\nOtherwise, you can simply require the given `autoload.php` file:\r\n\r\n```php\r\nrequire_once 'PATH_TO_LIBRARY/autoload.php';\r\n\r\n```\r\n\r\nAnd in either case, I'd suggest using an alias for `EasyBanglaDate\\Types\\DateTime` Class to distinguish between native DateTime Class.\r\n\r\n```php\r\nuse EasyBanglaDate\\Types\\DateTime as EnDateTime;\r\n```\r\n\r\n## Methods/Features\r\n\r\nBoth `EasyBanglaDate\\Types\\DateTime` adn `EasyBanglaDate\\Types\\BnDateTime` has the member functions as native DateTime class.\r\n`EasyBanglaDate\\Types\\BnDateTime` got extra method setMorning to define a hour for start of day. By default day start at 6.\r\nAlong with all format options of native DateTime class, we have extra option `b` which will print ('ভোর', 'সকাল', 'দুপুর', 'বিকাল', 'সন্ধ্যা', 'রাত')\r\n\r\n\r\n## Contributing to Library\r\n\r\nIf you find a bug or want to add a feature to EasyBanglaDate, great! In order to make it easier and quicker for me to verify and merge changes in, it would be amazing if you could follow these few basic steps:\r\n\r\n1. Fork the project.\r\n2. **Branch out into a new branch. `git checkout -b name_of_new_feature_or_bug`**\r\n3. Make your feature addition or bug fix.\r\n4. **Add tests for it. This is important so I don’t break it in a future version unintentionally.**\r\n5. Commit.\r\n6. Send me a pull request!\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}